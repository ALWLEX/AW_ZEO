# AW_ZEO/app.py


import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

from config import BOT_TOKEN, WEBAPP_URL
from database.db_handler import DatabaseHandler
from services.moodle_service import MoodleService
from services.schedule_service import ScheduleService
from services.ai_service import AIService

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


class AWZeoBot:
    def __init__(self):
        logger.info(" –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞...")
        self.application = Application.builder().token(BOT_TOKEN).build()

        try:
            self.db = DatabaseHandler()
            self.moodle_service = MoodleService()
            self.schedule_service = ScheduleService()
            self.ai_service = AIService()
            logger.info("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
            raise

        logger.info("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
        self.setup_handlers()
        logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")

    def setup_handlers(self):

        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.help))
        self.application.add_handler(CommandHandler("app", self.open_app))
        self.application.add_handler(CommandHandler("moodle", self.moodle_info))
        self.application.add_handler(CommandHandler("schedule", self.schedule_info))
        self.application.add_handler(CommandHandler("admission", self.admission_info))
        self.application.add_handler(CallbackQueryHandler(self.button_handler))
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
        self.application.add_handler(MessageHandler(filters.CONTACT, self.handle_contact))

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):

        user = update.effective_user

        welcome_text = f"""
üéì *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AW_ZEO, {user.first_name}!*

ü§ñ *–í–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ö–†–£ –∏–º. –ê. –ë–∞–π—Ç—É—Ä—Å—ã–Ω–æ–≤–∞*

‚ú® *–ß—Ç–æ —É–º–µ–µ—Ç AW_ZEO:*
‚Ä¢ üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä* - –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã
‚Ä¢ üéì *–î–æ—Å—Ç—É–ø –∫ Moodle* - –ª–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è  
‚Ä¢ üß© *–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è* - —Ç–µ—Å—Ç –ö–ª–∏–º–æ–≤–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
‚Ä¢ üéØ *–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ* - –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤
‚Ä¢ ü§ñ *AI –ø–æ–º–æ—â–Ω–∏–∫* - –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã

üì± *–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:*
        """

        keyboard = [
            [InlineKeyboardButton("üìû –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)],
            [InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=WEBAPP_URL))]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            welcome_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    async def handle_contact(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        contact = update.message.contact


        self.db.save_user(
            user_id=user.id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name,
            phone_number=contact.phone_number
        )

        await update.message.reply_text(
            "‚úÖ *–°–ø–∞—Å–∏–±–æ! –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.*\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –¥–∞–Ω–Ω—ã–º Moodle. "
            "–î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à–µ –§–ò–û –∏–ª–∏ –ò–ò–ù.",
            parse_mode='Markdown'
        )

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        text = update.message.text


        user_data = self.db.get_user(user.id)

        if not user_data or not user_data.phone_number:

            await update.message.reply_text(
                "üìû *–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.*\n\n"
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("üìû –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
                ]]),
                parse_mode='Markdown'
            )
            return


        if any(keyword in text.lower() for keyword in ['–ª–æ–≥–∏–Ω', '–ø–∞—Ä–æ–ª—å', 'moodle', '–¥–∞–Ω–Ω—ã–µ', '—É—á–µ—Ç–Ω—ã–µ']):
            await self.handle_moodle_request(update, user_data, text)

        elif any(keyword in text.lower() for keyword in ['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ø–∞—Ä—ã', '–∫–æ–≥–¥–∞ —É—á–∏—Ç—å—Å—è', '—Ä–∞—Å–ø–∏—Å']):
            await self.handle_schedule_request(update, text)
        else:

            response = await self.ai_service.process_natural_language(text, user.id)
            await update.message.reply_text(response)

    async def handle_moodle_request(self, update: Update, user_data, text: str):

        credentials = self.moodle_service.get_credentials_by_phone_and_name(
            user_data.phone_number,
            text
        )

        if credentials.get('success'):
            response = f"""
üéì *–í–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Moodle:*

üë§ *–§–ò–û:* {credentials['full_name']}
üìö *–ì—Ä—É–ø–ø–∞:* {credentials['group']}
üîë *–õ–æ–≥–∏–Ω:* `{credentials['login']}`
üîí *–ü–∞—Ä–æ–ª—å:* `{credentials['password']}`
üìß *Email:* {credentials['email']}

üí° *–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ!*
            """
        else:
            response = f"""
‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.*

*–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:*
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –§–ò–û –∏–ª–∏ –ò–ò–ù
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É—á–∏—Ç–µ—Å—å –≤ –ö–†–£
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É

*–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:*
‚Ä¢ –í–∞—à–µ –ø–æ–ª–Ω–æ–µ –§–ò–û (–∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö)
‚Ä¢ –ò–ª–∏ –≤–∞—à –ò–ò–ù
            """

        await update.message.reply_text(response, parse_mode='Markdown')

    async def handle_schedule_request(self, update: Update, text: str):


        response = """
üìÖ *–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:*

1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ AW_ZEO
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
3. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É
4. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å

üöÄ *–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:*
        """

        keyboard = [[InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å AW_ZEO", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(response, reply_markup=reply_markup, parse_mode='Markdown')

    async def moodle_info(self, update: Update, context: ContextTypes.DEFAULT_TYPE):

        moodle_text = """
 *–î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ Moodle*

*–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:*
1. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–ª–∏)
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤–∞—à–µ –§–ò–û –∏–ª–∏ –ò–ò–ù
3. –ü–æ–ª—É—á–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å


 *–í–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*
‚Ä¢ –õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
‚Ä¢ –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É

        """

        keyboard = [
            [InlineKeyboardButton("üìû –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)],
            [InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=WEBAPP_URL))]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            moodle_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    async def schedule_info(self, update: Update, context: ContextTypes.DEFAULT_TYPE):

        schedule_text = """
üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π*

*–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ AW_ZEO –≤—ã –º–æ–∂–µ—Ç–µ:*
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã
‚Ä¢ –í–∏–¥–µ—Ç—å –ø–∞—Ä—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞ –∏–ª–∏ –ª—é–±—É—é –¥–∞—Ç—É
‚Ä¢ –£–∑–Ω–∞–≤–∞—Ç—å –≤—Ä–µ–º—è, –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π

*–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:*
1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ AW_ZEO
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
3. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É
4. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É

üîÑ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ*
        """

        keyboard = [[InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            schedule_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    async def admission_info(self, update: Update, context: ContextTypes.DEFAULT_TYPE):

        admission_text = """
üéØ *–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ö–†–£*

*–î–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ:*
‚Ä¢ üß© *–¢–µ—Å—Ç –ö–ª–∏–º–æ–≤–∞* - –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –∏ –≤—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
‚Ä¢ üìä *–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã* - –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
‚Ä¢ üéì *–ü—Ä–æ—Ö–æ–¥–Ω—ã–µ –±–∞–ª–ª—ã* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É

*–ö–∞–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ AW_ZEO
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ"
3. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É

üéì *–£—Ä–æ–≤–Ω–∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:*
‚Ä¢ –ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç
‚Ä¢ –ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞  
‚Ä¢ –î–æ–∫—Ç–æ—Ä–∞–Ω—Ç—É—Ä–∞
        """

        keyboard = [[InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            admission_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    async def open_app(self, update: Update, context: ContextTypes.DEFAULT_TYPE):

        app_text = f"""
üöÄ *–û—Ç–∫—Ä—ã—Ç–∏–µ AW_ZEO –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è*

üåê *–°—Å—ã–ª–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:*
{WEBAPP_URL}

üí° *–î–≤–∞ —Å–ø–æ—Å–æ–±–∞ –æ—Ç–∫—Ä—ã—Ç—å:*
1. *–í Telegram* - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ (–æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∫–∞–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
2. *–í –±—Ä–∞—É–∑–µ—Ä–µ* - —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ

üì± *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:*
‚Ä¢ *–ì–ª–∞–≤–Ω–∞—è* - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
‚Ä¢ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ* - –≤–∞—à–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä
‚Ä¢ *Moodle* - —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
‚Ä¢ *–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤
        """

        keyboard = [
            [InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram", web_app=WebAppInfo(url=WEBAPP_URL))],
            [InlineKeyboardButton("üîó –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", url=WEBAPP_URL)]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            app_text,
            reply_markup=reply_markup,
            parse_mode='Markdown',
            disable_web_page_preview=True
        )

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):

        help_text = """
üìñ *–ü–æ–º–æ—â—å –ø–æ AW_ZEO*

*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/app - –æ—Ç–∫—Ä—ã—Ç—å Web –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/schedule - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
/moodle - –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ Moodle
/admission - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Moodle:*
1. –ù–∞–∂–º–∏—Ç–µ /start –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤–∞—à–µ –§–ò–û –∏–ª–∏ –ò–ò–ù
3. –ü–æ–ª—É—á–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å

*–ü–æ–¥–¥–µ—Ä–∂–∫–∞:*
–ü—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.
        """

        keyboard = [
            [InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=WEBAPP_URL))],
            [InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            help_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    async def button_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        await query.answer()

        if query.data == "support":
            text = "üìû *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (7142) 51-11-57\nEmail: support@kru.edu.kz"
        else:
            text = "üöÄ *–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è*"

        keyboard = [[InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å AW_ZEO", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(
            text=text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )